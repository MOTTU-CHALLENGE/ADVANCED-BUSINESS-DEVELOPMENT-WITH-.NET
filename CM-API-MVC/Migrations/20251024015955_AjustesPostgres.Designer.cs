// <auto-generated />
using System;
using CM_API_MVC.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CM_API_MVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251024015955_AjustesPostgres")]
    partial class AjustesPostgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CM_API_MVC.Models.DispositivoIot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_DISPOSITIVO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInstalacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_INSTALACAO");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("DS_OBS");

                    b.Property<int?>("IdMoto")
                        .HasColumnType("integer")
                        .HasColumnName("ID_MOTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NM_DISPOSITIVO");

                    b.HasKey("Id");

                    b.HasIndex("IdMoto")
                        .IsUnique();

                    b.ToTable("T_CM_DISPOSITIVO_IOT");
                });

            modelBuilder.Entity("CM_API_MVC.Models.Filial", b =>
                {
                    b.Property<int>("IdFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_FILIAL");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFilial"));

                    b.Property<string>("Cep")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("CD_CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("DS_CIDADE");

                    b.Property<DateTime?>("DataInauguracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_INAUGURACAO");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("DS_ENDERECO");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DS_ESTADO");

                    b.Property<string>("NomeFilial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NM_FILIAL");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DS_PAIS");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("DS_TELEFONE");

                    b.HasKey("IdFilial");

                    b.ToTable("T_CM_FILIAL");
                });

            modelBuilder.Entity("CM_API_MVC.Models.Moto", b =>
                {
                    b.Property<int>("IdMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_MOTO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMoto"));

                    b.Property<int?>("AnoFabricacao")
                        .HasColumnType("integer")
                        .HasColumnName("NR_ANO_FABRICACAO");

                    b.Property<string>("CodTag")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("CD_TAG");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_CADASTRO");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DS_MODELO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("DS_PLACA");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("ST_STATUS");

                    b.Property<string>("TipoMoto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("TP_MOTO");

                    b.HasKey("IdMoto");

                    b.HasIndex("CodTag")
                        .IsUnique();

                    b.ToTable("T_CM_MOTO");
                });

            modelBuilder.Entity("CM_API_MVC.Models.Patio", b =>
                {
                    b.Property<int>("IdPatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_PATIO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPatio"));

                    b.Property<decimal?>("Area")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("VL_AREA_PATIO");

                    b.Property<int?>("CapacidadeMax")
                        .HasColumnType("integer")
                        .HasColumnName("NR_CAP_MAX");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("DS_OBS");

                    b.Property<int>("IdFilial")
                        .HasColumnType("integer")
                        .HasColumnName("ID_FILIAL");

                    b.Property<string>("NomePatio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NM_PATIO");

                    b.HasKey("IdPatio");

                    b.HasIndex("IdFilial");

                    b.ToTable("T_CM_PATIO");
                });

            modelBuilder.Entity("CM_API_MVC.Models.PosicaoMoto", b =>
                {
                    b.Property<int>("IdPosicao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_POSICAO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPosicao"));

                    b.Property<double>("CoordenadaX")
                        .HasColumnType("double precision")
                        .HasColumnName("COORD_X");

                    b.Property<double>("CoordenadaY")
                        .HasColumnType("double precision")
                        .HasColumnName("COORD_Y");

                    b.Property<DateTime>("DataHoraRegistro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_REGISTRO");

                    b.Property<int>("IdDispositivo")
                        .HasColumnType("integer")
                        .HasColumnName("ID_DISPOSITIVO");

                    b.Property<int>("IdPatio")
                        .HasColumnType("integer")
                        .HasColumnName("ID_PATIO");

                    b.Property<string>("Setor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DS_SETOR");

                    b.HasKey("IdPosicao");

                    b.HasIndex("IdDispositivo");

                    b.HasIndex("IdPatio");

                    b.ToTable("T_CM_POSICAO_MOTO");
                });

            modelBuilder.Entity("CM_API_MVC.Models.ReceptorWifi", b =>
                {
                    b.Property<int>("IdLeitor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID_LEITOR");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdLeitor"));

                    b.Property<DateTime>("DataInstalacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_INSTALACAO");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("DS_OBS");

                    b.Property<string>("EnderecoMac")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("character varying(17)")
                        .HasColumnName("DS_ENDERECO_MAC");

                    b.Property<int>("IdPatio")
                        .HasColumnType("integer")
                        .HasColumnName("ID_PATIO");

                    b.Property<string>("LocalInstalacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("DS_LOCAL_INSTALACAO");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("ST_STATUS");

                    b.HasKey("IdLeitor");

                    b.HasIndex("IdPatio");

                    b.ToTable("T_CM_RECEPTOR_WIFI");
                });

            modelBuilder.Entity("CM_API_MVC.Models.Rfid", b =>
                {
                    b.Property<string>("CodigoTag")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("CD_TAG");

                    b.Property<int?>("CodTag")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAtivacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DT_ATIVACAO");

                    b.Property<string>("Frequencia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("VL_FREQUENCIA");

                    b.Property<string>("Observacao")
                        .HasColumnType("text")
                        .HasColumnName("DS_OBS");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("ST_STATUS");

                    b.HasKey("CodigoTag");

                    b.HasIndex("CodTag");

                    b.ToTable("T_CM_RFID");
                });

            modelBuilder.Entity("CM_API_MVC.Models.DispositivoIot", b =>
                {
                    b.HasOne("CM_API_MVC.Models.Moto", "Moto")
                        .WithOne()
                        .HasForeignKey("CM_API_MVC.Models.DispositivoIot", "IdMoto")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("CM_API_MVC.Models.Moto", b =>
                {
                    b.HasOne("CM_API_MVC.Models.Rfid", "Rfid")
                        .WithOne()
                        .HasForeignKey("CM_API_MVC.Models.Moto", "CodTag")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Rfid");
                });

            modelBuilder.Entity("CM_API_MVC.Models.Patio", b =>
                {
                    b.HasOne("CM_API_MVC.Models.Filial", "Filial")
                        .WithMany("Patios")
                        .HasForeignKey("IdFilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("CM_API_MVC.Models.PosicaoMoto", b =>
                {
                    b.HasOne("CM_API_MVC.Models.DispositivoIot", "DispositivoIot")
                        .WithMany("Posicoes")
                        .HasForeignKey("IdDispositivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CM_API_MVC.Models.Patio", "Patio")
                        .WithMany("PosicaoMoto")
                        .HasForeignKey("IdPatio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DispositivoIot");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("CM_API_MVC.Models.ReceptorWifi", b =>
                {
                    b.HasOne("CM_API_MVC.Models.Patio", "Patio")
                        .WithMany("ReceptorWifi")
                        .HasForeignKey("IdPatio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("CM_API_MVC.Models.Rfid", b =>
                {
                    b.HasOne("CM_API_MVC.Models.Moto", "Moto")
                        .WithMany()
                        .HasForeignKey("CodTag");

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("CM_API_MVC.Models.DispositivoIot", b =>
                {
                    b.Navigation("Posicoes");
                });

            modelBuilder.Entity("CM_API_MVC.Models.Filial", b =>
                {
                    b.Navigation("Patios");
                });

            modelBuilder.Entity("CM_API_MVC.Models.Patio", b =>
                {
                    b.Navigation("PosicaoMoto");

                    b.Navigation("ReceptorWifi");
                });
#pragma warning restore 612, 618
        }
    }
}
